<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aonproject.admin.mInfo.dao.mInfoDAO">
    
    <select id="mInfoList" resultType="mInfo" parameterType="mInfo">
		/* mInfo - mInfoList */
		select member.m_no, regexp_replace(m_id, '.', '*', 4) as m_id, m_pwd, regexp_replace(m_name, '.', '*', 3) as m_name, m_gender, 
		regexp_replace(m_tel, '(\d{3})\-(\d{3,4})\-(\d{4})','\1-****-\3') as m_tel, regexp_replace(m_email, '.', '*', 4) as m_email, m_leave, 
		regexp_replace(m_addr, '.', '*', 15) as m_addr, to_char(m_date, 'YYYY-MM-DD HH24:MI:SS') as m_date
from member inner join (select * from (select min(m_addr) as maddr from member_addr group by(m_addr)) g1 inner join (select * from member_addr) on maddr = m_addr) member_addr 
on maddr = member_addr.m_addr 
where ma_no = (select min(ma_no) from member_addr where m_no = 2)
	</select>
	
	<!-- select member.m_no, m_id, m_pwd, m_name, m_gender, m_tel, m_email, m_leave, m_addr, to_char(m_date, 'YYYY-MM-DD HH24:MI:SS') as m_date
        from member inner join member_addr on member.m_no = member_addr.m_no -->
	
	<select id="mDetailForm" resultType="mInfo" parameterType="mInfo">
		select member.m_no, regexp_replace(m_id, '.', '*', 4) as m_id, m_pwd, regexp_replace(m_name, '.', '*', 3) as m_name, m_gender, 
		regexp_replace(m_tel, '(\d{3})\-(\d{3,4})\-(\d{4})','\1-****-\3') as m_tel, regexp_replace(m_email, '.', '*', 4) as m_email, m_leave, 
		regexp_replace(m_addr, '.', '*', 15) as m_addr, to_char(m_date, 'YYYY-MM-DD HH24:MI:SS') as m_date
		from member 
		inner join (select * from (select min(ma_no) as mno from member_addr group by(m_no)) g1 inner join (select * from member_addr) on mno = ma_no) member_addr 
		on member.m_no = member_addr.m_no 
		where member.m_no = #{m_no}
	</select>
	
	<!-- mInfo delete
	<delete id="mInfoDelete" parameterType="int">
		delete from member where m_no = #{m_no}
	</delete> -->
	
	<!-- user address -->
	<insert id="addAddr" parameterType="mInfo">
		insert into member_addr(ma_no, m_no, m_addr)
		values(member_addr_seq.nextval, #{m_no}, #{m_addr})
	</insert>
	
	<!-- 회원 삭제 시 계정 탈퇴 _ 탈퇴 테이블로 이동 -->
	<insert id = "memberExpire" parameterType="mInfo">
		insert into member_expire(
			me_no,
			me_id,
			me_name,
			me_tel,
			me_email
			) values(
			#{m_no},
			#{m_id},
			#{m_name},
			#{m_tel},
			#{m_email}
			)
	</insert>
	
	<!-- 회원 삭제 시 계정 탈퇴 _ 회원 테이블에서 데이터 제거 -->
	<update id = "memberGoodBye" parameterType="mInfo">
		update member set
			m_pwd = null,
			m_name = null,
			m_gender = null,
			m_tel = null,
			m_email = null,
			m_leave = #{m_leave}
			where m_no = #{m_no}
	</update>
	
	<!-- 회원 삭제 시 계정 탈퇴 _ 회원 주소 테이블에서 데이터 제거 -->
	<delete id="memberAddrGoodBye" parameterType="mInfo">
		delete from member_addr where m_no = #{m_no}
	</delete>
	
</mapper>